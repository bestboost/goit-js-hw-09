{"mappings":"AAiBA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAACN,SAASA,EAAUC,MAAMA,IAElCM,EAAO,CAACP,SAASA,EAAUC,MAAMA,MAElCA,MA1BMQ,SAASC,cAAc,QAE/BC,iBAAiB,UAAWC,IAE/B,GADAA,EAAGC,iBACAD,EAAGE,cAAcC,aAAa,WAC/B,QA2BJ,SAAoBC,GAClB,IAAKhB,SAAAiB,EAAUC,KAAAC,GAAQH,EACvB,MAAMI,EAAQD,EAAKE,SACbC,EAASC,SAASH,EAAc,OAAEI,MAAM,IACxCC,EAAQF,SAASH,EAAa,MAAEI,MAAM,IACtCE,EAAOH,SAASH,EAAY,KAAEI,MAAM,IAC1C,IAAIG,EAAYD,EAChBP,EAAKS,aAAa,UAAU,QAC5BD,EAAYF,EAMZ,IAAK,IAAII,EAAI,EAAGA,EAAIP,EAAQO,IAAI,CACd9B,EAAc8B,EAAE,EAAGF,GAC3BG,MAAMC,IACZ,MAAM/B,SAACA,EAAQC,MAAEA,GAAS8B,EAC1BC,QAAQC,IAAI,uBAAqBjC,QAAiBC,UAGnDiC,OAAOH,IACN,MAAM/B,SAACA,EAAQC,MAAEA,GAAS8B,EAC1BC,QAAQC,IAAI,sBAAoBjC,QAAeC,UAGjD0B,GAAaD,GA9CfS,CAJa,CACXnC,SAAU,EACVkB,KAAMN,EAAGE","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst form = document.querySelector('form')\n\nform.addEventListener(\"submit\", (ev) => {\n  ev.preventDefault()\n  if(ev.currentTarget.getAttribute(\"pending\")){\n    return\n  }\n  \n  const data = {\n    position: 1,\n    form: ev.currentTarget\n  }\n  doPromises(data)\n\n})\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position:position, delay:delay});\n      } else {\n        reject({position:position, delay:delay});\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nfunction doPromises(data){\n  let {position, form} = data\n  const elems = form.elements\n  const amount = parseInt(elems['amount'].value,10)\n  const delay = parseInt(elems['delay'].value,10)\n  const step = parseInt(elems['step'].value,10)\n  let currDelay = step\n  form.setAttribute(\"pending\",\"true\")\n  currDelay = delay\n  const unblocking = (position) =>{\n    if(position === amount){\n      form.removeAttribute(\"pending\")\n    }\n  }\n  for (let i = 0; i < amount; i++){\n    const promise = createPromise(i+1, currDelay)\n    promise.then((data) => {\n      const {position, delay} = data\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    \n    })\n    .catch((data) => {\n      const {position, delay} = data\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n    \n    })\n    currDelay += step\n  }\n\n\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","ev","preventDefault","currentTarget","getAttribute","data1","position1","form","form1","elems","elements","amount","parseInt","value","delay1","step","currDelay","setAttribute","i","then","data","console","log","catch","$47d4ff9957288465$var$doPromises"],"version":3,"file":"03-promises.9ac9831a.js.map"}