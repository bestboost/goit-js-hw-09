{"mappings":"AAwBgE,MAA1DA,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACrCG,EAAiBJ,SAASC,cAAc,UAE9CI,MAAQ,GACRN,EAAWO,iBAAiB,SAC5B,SAAuBC,GACnBF,MAAQE,EAAMC,cAAcC,MAC5BC,QAAQC,IAAI,QAASN,UAKzBO,KAAO,GACPV,EAAUI,iBAAiB,SAC3B,SAAsBC,GAClBK,KAAOL,EAAMC,cAAcC,MAC3BC,QAAQC,IAAI,OAAQC,SAKxBC,OAAS,GACTV,EAAYG,iBAAiB,SAC7B,SAAwBC,GACpBM,OAASN,EAAMC,cAAcC,MAC7BC,QAAQC,IAAI,SAAUE,WAO1B,MAAMC,EAAU,IAAIC,SAAS,CAACC,EAASC,SAqBvC,SAASC,EAAcC,EAAUd,GAETe,KAAKC,SAAW,GAGpCX,QAAQC,IAAI,uBAAqBQ,QAAiBd,OAGhDK,QAAMC,IAAI,sBAAoBQ,QAAiBd,OAhBrDK,QAAQC,IAAIG,GAMZV,EAAeE,iBAAiB,SAAUY,GAe1CA,EAAc,EAAG,MACdI,MAAK,EAACH,SAAEA,EAAQd,MAAEA,MACjBK,QAAQC,IAAI,uBAAqBQ,QAAiBd,UAEnDkB,OAAM,EAACJ,SAAEA,EAAQd,MAAEA,MAClBK,QAAQC,IAAI,sBAAoBQ,QAAed","sources":["src/js/03-promises.js"],"sourcesContent":["// В HTML есть разметка формы, в поля которой пользователь будет вводить первую задержку в\n//  миллисекундах, шаг увеличения задержки для каждого промиса после первого и количество промисов\n//   которое необходимо создать.\n\n// <form class=\"form\">\n//   <label>\n//     First delay (ms)\n//     <input type=\"number\" name=\"delay\" required />\n//   </label>\n//   <label>\n//     Delay step (ms)\n//     <input type=\"number\" name=\"step\" required />\n//   </label>\n//   <label>\n//     Amount\n//     <input type=\"number\" name=\"amount\" required />\n//   </label>\n//   <button type=\"submit\">Create promises</button>\n// </form>\n\n// Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay)\n//  столько раз, сколько ввели в поле amount. При каждом вызове передай ей номер создаваемого\n//   промиса (position) и задержку учитывая введенную пользователем первую задержку (delay) и шаг (step).\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst promisesButton = document.querySelector('button');\n\ndelay = '';\ndelayInput.addEventListener('input', onDalayInput)\nfunction onDalayInput (event) {\n    delay = event.currentTarget.value;\n    console.log('delay', delay);\n} \n// onDalayInput()\n\n\nstep = '';\nstepInput.addEventListener('input', onStepInput)\nfunction onStepInput (event) {\n    step = event.currentTarget.value;\n    console.log('step', step);\n} \n// onStepInput()\n\n\namount = '';\namountInput.addEventListener('input', onAmountInput)\nfunction onAmountInput (event) {\n    amount = event.currentTarget.value;\n    console.log('amount', amount);\n} \n// onAmountInput()\n\n\n\n// const shouldResolve = Math.random() > 0.3;\nconst promise = new Promise ((resolve, reject) => {\n  \n//   setTimeout(() => {\n   \n//     if (shouldResolve) {\n//       resolve(\"Success! Value passed to resolve function\");\n//     } else {\n//       reject(\"Error! Error passed to reject function\");\n//     }\n//     console.log('создался промис')\n//   }, 3000);\n \n});\nconsole.log(promise)\n\n// promise.then(value => { console.log(value); // \"Success! Value passed to resolve function\"\n// },).catch(error => {  console.log(error); // \"Error! Error passed to reject function\"\n// })\n\npromisesButton.addEventListener('submit', createPromise)\n\nfunction createPromise(position, delay) {\n\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    \n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    // Fulfill \n  } else {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    // Reject\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$promisesButton","delay","addEventListener","event","currentTarget","value","console","log","step","amount","$47d4ff9957288465$var$promise","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","position","Math","random","then","catch"],"version":3,"file":"03-promises.48b1eaa7.js.map"}