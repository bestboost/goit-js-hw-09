{"mappings":"AAyBgE,MAA1DA,EAAOC,SAASC,cAAc,SAC9BC,EAAiBF,SAASC,cAAc,UAM9CF,EAAKI,iBAAiB,SAKtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAeF,EAAMG,cAErBC,EAAaF,EAAaG,MAAMC,MAChCC,EAAYL,EAAaM,KAAKF,MAC9BG,EAAcP,EAAaQ,OAAOJ,MAElCD,EAAQM,OAAOP,GACfI,EAAOG,OAAOJ,GACdG,EAASC,OAAOF,GAMxBG,EAAW,C,MACPP,E,KACAG,E,OACAE,GAGFG,QAAQC,IAAIF,MA3Bdd,EAAeC,iBAAiB,UA6ChC,UAAuBgB,SAACA,EAAQV,MAAEA,IAKhC,OAHAU,GAAY,EACZF,QAAQC,IAAKC,GAEN,IAAIC,SAAS,CAACC,EAASC,KAC9B,MAAMC,EAAgBC,KAAKC,SAAW,GAGrCC,YAAW,KACJH,EAENN,QAAQC,IAAI,uBAAqBC,QAAiBV,OAGhDQ,QAAMC,IAAI,sBAAoBC,QAAiBV,SAG/CA,SA7DN,IAAIO,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["// В HTML есть разметка формы, в поля которой пользователь будет вводить первую задержку в\n//  миллисекундах, шаг увеличения задержки для каждого промиса после первого и количество промисов\n//   которое необходимо создать.\n\n\n// <form class=\"form\">\n//   <label>\n//     First delay (ms)\n//     <input type=\"number\" name=\"delay\" required />\n//   </label>\n//   <label>\n//     Delay step (ms)\n//     <input type=\"number\" name=\"step\" required />\n//   </label>\n//   <label>\n//     Amount\n//     <input type=\"number\" name=\"amount\" required />\n//   </label>\n//   <button type=\"submit\">Create promises</button>\n// </form>\n\n// Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay)\n//  столько раз, сколько ввели в поле amount. При каждом вызове передай ей номер создаваемого\n//   промиса (position) и задержку учитывая введенную пользователем первую задержку (delay) и шаг (step).\n\nconst form = document.querySelector(\".form\");\nconst promisesButton = document.querySelector('button');\n\n// const firstDelay = document.querySelector('[name=\"delay\"]');\n// const delayStep = document.querySelector('[name=\"step\"]');\n// const amountInput = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener(\"input\", handleSubmit);\npromisesButton.addEventListener('submit', createPromise);\n\nlet formData = {};\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  \n  const formElements = event.currentTarget;\n\n  const delayInput = formElements.delay.value;\n  const stepInput = formElements.step.value;\n  const amountInput = formElements.amount.value;  \n\n  const delay = Number(delayInput);\n  const step = Number(stepInput);\n  const amount = Number(amountInput)  \n\n// console.log(delay)\n// console.log(step)\n// console.log(amount)\n\nformData = {\n    delay,\n    step,\n    amount,\n  }\n \n  console.log(formData)\n\n  // event.currentTarget.reset();\n \n}\n\n\n// function takeValue () {\n//   formData = {\n//     delay,\n//     step,\n//     amount, \n//   }\n//   console.log('!!', formData)\n// }\n// takeValue ()\n\n\nfunction createPromise({position, delay}) {\n\n  position += 1;\n  console.log (position)\n \n  return new Promise ((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n\n  \n   setTimeout(() => {\n      if (shouldResolve) {\n       \n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    // Fulfill \n  } else {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    // Reject\n  }\n   }, delay)\n  })\n\n}\n\n\n// function funcBefore(){\n//   intervalId = null;\n\n//   intervalId = setInterval(function createPromise(){\n\n \n//    clearInterval(intervalId);\n\n//  funcBefore();\n// }, amount);\n// clearInterval(intervalId);\n// }\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n\n\n\n\n// let delay = '';\n\n\n// function onDelayInput (event) {\n//     delay = event.currentTarget.value;\n//     console.log('delay', delay);\n   \n// }\n\n\n// let step = '';\n// delayStep.addEventListener('input', onStepInput)\n// function onStepInput (event) {\n//     step = event.currentTarget.value;\n//     console.log('step', step);\n// } \n// onStepInput()\n\n\n// let amount = '';\n// amountInput.addEventListener('input', onAmountInput)\n// function onAmountInput (event) {\n//     amount = event.currentTarget.value;\n//     console.log('amount', amount);\n// } \n// onAmountInput()\n\n\n\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$promisesButton","addEventListener","event","preventDefault","formElements","currentTarget","delayInput","delay","value","stepInput","step","amountInput","amount","Number","$47d4ff9957288465$var$formData","console","log","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.7dc38a45.js.map"}